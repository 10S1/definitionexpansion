
concrete MathWordsEng of MathWordsEngAbs = CatEng ** open ParadigmsEng in {
lin CNL_PN = mkPN "CNL" ;  
lin QLF_PN = mkPN "QLF" ;  
lin 'quasi-logical_A' = mkA "quasi-logical" ;  
lin GLIF_PN = mkPN "GLIF" ;  
lin AST_Adv = mkAdv "AST" ;  
lin linearize_N = mkN "linearize" ;  
lin linearization_N = mkN "linearization" ;  
lin GF_N = mkN "GF" ;  
lin NLP_PN = mkPN "NLP" ;  
lin NLU_PN = mkPN "NLU" ;  
lin solving_N = mkN "solving" ;  
lin ERD_PN = mkPN "ERD" ;  
lin DDL_PN = mkPN "DDL" ;  
lin RDBMS_PN = mkPN "RDBMS" ;  
lin SQL_PN = mkPN "SQL" ;  
lin constraint_A = mkA "constraint" ;  
lin DBMS_PN = mkPN "DBMS" ;  
lin moufang_N = mkN "moufang" ;  
lin Moufang_PN = mkPN "Moufang" ;  
lin subring_N = mkN "subring" ;  
lin matroid_N = mkN "matroid" ;  
lin algebraically_Adv = mkAdv "algebraically" ;  
lin underlie_A = mkA "underlie" ;  
lin operand_A = mkA "operand" ;  
lin semigroup_N = mkN "semigroup" ;  
lin unital_PN = mkPN "unital" ;  
lin monoid_N = mkN "monoid" ;  
lin generating_N = mkN "generating" ;  
lin leave_V = mkV "leave" ;  
lin coset_N = mkN "coset" ;  
lin Abelian_A = mkA "Abelian" ;  
lin Galois_PN = mkPN "Galois" ;  
lin Coxeter_PN = mkPN "Coxeter" ;  
lin MV_PN = mkPN "MV" ;  
lin projective_A = mkA "projective" ;  
lin polynonial_A = mkA "polynonial" ;  
lin ringoid_PN = mkPN "ringoid" ;  
lin Archimedean_PN = mkPN "Archimedean" ;  
lin Friendly_A = mkA "Friendly" ;  
lin Giant_PN = mkPN "Giant" ;  
lin Fischer_PN = mkPN "Fischer" ;  
lin Griess_PN = mkPN "Griess" ;  
lin centralizer_N = mkN "centralizer" ;  
lin subfield_N = mkN "subfield" ;  
lin quasigroup_N = mkN "quasigroup" ;  
lin boolean_A = mkA "boolean" ;  
lin non_Adv = mkAdv "non" ;  
lin adjunction_N = mkN "adjunction" ;  
lin PID_PN = mkPN "PID" ;  
lin sided_A = mkA "sided" ;  
lin overgroup_N = mkN "overgroup" ;  
lin cancellative_A = mkA "cancellative" ;  
lin automorphism_N = mkN "automorphism" ;  
lin semilattice_N = mkN "semilattice" ;  
lin gcd_PN = mkPN "gcd" ;  
lin common_A = mkA "common" ;  
lin profinite_A = mkA "profinite" ;  
lin coefficient_A = mkA "coefficient" ;  
lin monomial_A = mkA "monomial" ;  
lin lead_V = mkV "lead" ;  
lin monic_PN = mkPN "monic" ;  
lin cubic_N = mkN "cubic" ;  
lin pole_N = mkN "pole" ;  
lin conjugacy_N = mkN "conjugacy" ;  
lin splitting_N = mkN "splitting" ;  
lin semiring_V = mkV "semiring" ;  
lin univariate_A = mkA "univariate" ;  
lin Noetherian_PN = mkPN "Noetherian" ;  
lin uniformly_Adv = mkAdv "uniformly" ;  
lin decadic_A = mkA "decadic" ;  
lin Briggsian_A = mkA "Briggsian" ;  
lin Jordan_PN = mkPN "Jordan" ;  
lin leftsided_A = mkA "leftsided" ;  
lin rightsided_A = mkA "rightsided" ;  
lin subsequence_N = mkN "subsequence" ;  
lin holomorphic_A = mkA "holomorphic" ;  
lin 'bi-infinite_A' = mkA "bi-infinite" ;  
lin first_A = mkA "first" ;  
lin second_A = mkA "second" ;  
lin third_A = mkA "third" ;  
lin infinitely_Adv = mkAdv "infinitely" ;  
lin 'n$th_N' = mkN "n$th" ;  
lin continuously_Adv = mkAdv "continuously" ;  
lin riemann_PN = mkPN "riemann" ;  
lin Riemann_PN = mkPN "Riemann" ;  
lin Darboux_PN = mkPN "Darboux" ;  
lin Lagrange_PN = mkPN "Lagrange" ;  
lin Leibniz_PN = mkPN "Leibniz" ;  
lin Euler_PN = mkPN "Euler" ;  
lin Newton_PN = mkPN "Newton" ;  
lin midpoint_A = mkA "midpoint" ;  
lin integrable_A = mkA "integrable" ;  
lin extremum_PN = mkPN "extremum" ;  
lin indiscernible_N = mkN "indiscernible" "indiscernibles" ;  
lin toplogy_N = mkN "toplogy" ;  
lin monotonically_Adv = mkAdv "monotonically" ;  
lin isotone_N = mkN "isotone" ;  
lin antitone_N = mkN "antitone" ;  
lin preseving_N = mkN "preseving" ;  
lin reversing_N = mkN "reversing" ;  
lin strictly_Adv = mkAdv "strictly" ;  
lin decreasing_V = mkV "decreasing" ;  
lin subinterval_A = mkA "subinterval" ;  
lin signum_N = mkN "signum" ;  
lin embedding_N = mkN "embedding" ;  
lin pointwise_N = mkN "pointwise" ;  
lin supremum_PN = mkPN "supremum" ;  
lin infimum_PN = mkPN "infimum" ;  
lin softmax_N = mkN "softmax" ;  
lin Taylor_PN = mkPN "Taylor" ;  
lin Mclaurin_PN = mkPN "Mclaurin" ;  
lin cauchy_N = mkN "cauchy" ;  
lin Lipschitz_PN = mkPN "Lipschitz" ;  
lin cryptosystem_N = mkN "cryptosystem" ;  
lin kibi_PN = mkPN "kibi" ;  
lin mebi_PN = mkPN "mebi" ;  
lin gibi_PN = mkPN "gibi" ;  
lin tebi_N = mkN "tebi" ;  
lin pebi_PN = mkPN "pebi" ;  
lin zebi_PN = mkPN "zebi" ;  
lin yobi_PN = mkPN "yobi" ;  
lin cryptology_N = mkN "cryptology" ;  
lin breaking_N = mkN "breaking" ;  
lin cryptoanalysis_N = mkN "cryptoanalysis" ;  
lin plaintext_N = mkN "plaintext" ;  
lin ciphertext_N = mkN "ciphertext" ;  
lin decryption_N = mkN "decryption" ;  
lin TLS_PN = mkPN "TLS" ;  
lin credential_A = mkA "credential" ;  
lin CSP_PN = mkPN "CSP" ;  
lin authenticator_N = mkN "authenticator" ;  
lin CS_PN = mkPN "CS" ;  
lin Base64_N = mkN "Base64" ;  
lin https_N = mkN "https" ;  
lin CMS_PN = mkPN "CMS" ;  
lin WCMS_PN = mkPN "WCMS" ;  
lin login_N = mkN "login" ;  
lin Logon_PN = mkPN "Logon" ;  
lin adversarial_A = mkA "adversarial" ;  
lin prune_PN = mkPN "prune" ;  
lin fringe_PN = mkPN "fringe" ;  
lin periodization_N = mkN "periodization" ;  
lin archaic_PN = mkPN "archaic" ;  
lin renaiscance_N = mkN "renaiscance" ;  
lin yard_PN = mkPN "yard" ;  
lin ampere_PN = mkPN "ampere" ;  
lin IPK_PN = mkPN "IPK" ;  
lin Kilogram_PN = mkPN "Kilogram" ;  
lin gram_PN = mkPN "gram" ;  
lin Radian_PN = mkPN "Radian" ;  
lin candela_PN = mkPN "candela" ;  
lin Fahrenheit_PN = mkPN "Fahrenheit" ;  
lin Kelvin_PN = mkPN "Kelvin" ;  
lin Celsius_PN = mkPN "Celsius" ;  
lin SI_PN = mkPN "SI" ;  
lin derive_N = mkN "derive" "derives" ;  
lin United_A = mkA "United" ;  
lin State_PN = mkPN "State" ;  
lin Dollar_PN = mkPN "Dollar" ;  
lin Euro_PN = mkPN "Euro" ;  
lin prefixe_V = mkV "prefixe" ;  
lin Zetta_PN = mkPN "Zetta" ;  
lin peta_N = mkN "peta" ;  
lin tera_PN = mkPN "tera" ;  
lin giga_PN = mkPN "giga" ;  
lin mega_PN = mkPN "mega" ;  
lin hecto_N = mkN "hecto" ;  
lin deca_PN = mkPN "deca" ;  
lin deci_N = mkN "deci" ;  
lin centi_PN = mkPN "centi" ;  
lin Milli_PN = mkPN "Milli" ;  
lin micro_PN = mkPN "micro" ;  
lin nano_PN = mkPN "nano" ;  
lin pico_PN = mkPN "pico" ;  
lin femto_PN = mkPN "femto" ;  
lin atto_PN = mkPN "atto" ;  
lin zepto_PN = mkPN "zepto" ;  
lin yocto_PN = mkPN "yocto" ;  
lin joule_PN = mkPN "joule" ;  
lin coulomb_PN = mkPN "coulomb" ;  
lin mass_A = mkA "mass" ;  
lin Gregorian_A = mkA "Gregorian" ;  
lin lemma_PN = mkPN "lemma" ;  
lin corollary_A = mkA "corollary" ;  
lin totally_Adv = mkAdv "totally" ;  
lin disconnected_A = mkA "disconnected" ;  
lin homotopy_N = mkN "homotopy" ;  
lin homeomorphism_N = mkN "homeomorphism" ;  
lin Kuratowski_PN = mkPN "Kuratowski" ;  
lin nullary_N = mkN "nullary" ;  
lin extensitivity_N = mkN "extensitivity" ;  
lin idempotence_N = mkN "idempotence" ;  
lin preclosure_N = mkN "preclosure" ;  
lin hausdorff_N = mkN "hausdorff" ;  
lin Hausdorff_PN = mkPN "Hausdorff" ;  
lin finer_N = mkN "finer" ;  
lin coarser_N = mkN "coarser" ;  
lin subcover_N = mkN "subcover" ;  
lin pathwise_N = mkN "pathwise" ;  
lin homotopic_A = mkA "homotopic" ;  
lin homeomorphic_A = mkA "homeomorphic" ;  
lin clopen_N = mkN "clopen" ;  
lin locally_Adv = mkAdv "locally" ;  
lin Lebesgue_PN = mkPN "Lebesgue" ;  
lin cassini_N = mkN "cassini" ;  
lin Ramanujan_PN = mkPN "Ramanujan" ;  
lin multi_A = mkA "multi" ;  
lin additivity_N = mkN "additivity" ;  
lin convex_N = mkN "convex" ;  
lin simplex_N = mkN "simplex" ;  
lin eigenvector_N = mkN "eigenvector" ;  
lin eigenfunction_N = mkN "eigenfunction" ;  
lin linearly_Adv = mkAdv "linearly" ;  
lin associativity_N = mkN "associativity" ;  
lin affinely_Adv = mkAdv "affinely" ;  
lin LP_PN = mkPN "LP" ;  
lin grid_PN = mkPN "grid" ;  
lin ELPI_PN = mkPN "ELPI" ;  
lin UI_PN = mkPN "UI" ;  
lin CPU_PN = mkPN "CPU" ;  
lin ALU_PN = mkPN "ALU" ;  
lin arithmetic_A = mkA "arithmetic" ;  
lin lambda_PN = mkPN "lambda" ;  
lin Prolog_PN = mkPN "Prolog" ;  
lin renderer_N = mkN "renderer" ;  
lin ADT_PN = mkPN "ADT" ;  
lin UTM_PN = mkPN "UTM" ;  
lin turing_N = mkN "turing" ;  
lin ide_N = mkN "ide" ;  
lin cloud_A = mkA "cloud" ;  
lin IDE_PN = mkPN "IDE" ;  
lin csh_PN = mkPN "csh" ;  
lin zsh_PN = mkPN "zsh" ;  
lin vscode_PN = mkPN "vscode" ;  
lin halting_N = mkN "halting" ;  
lin emulator_N = mkN "emulator" ;  
lin tsp_PN = mkPN "tsp" ;  
lin getter_N = mkN "getter" ;  
lin mutator_N = mkN "mutator" ;  
lin accessor_N = mkN "accessor" ;  
lin destructor_N = mkN "destructor" ;  
lin mutually_Adv = mkAdv "mutually" ;  
lin SRS_PN = mkPN "SRS" ;  
lin deserialization_N = mkN "deserialization" ;  
lin unmarshalling_A = mkA "unmarshalling" ;  
lin marshalling_N = mkN "marshalling" ;  
lin Las_PN = mkPN "Las" ;  
lin Vegas_PN = mkPN "Vegas" ;  
lin metasyntactic_A = mkA "metasyntactic" ;  
lin significand_PN = mkPN "significand" ;  
lin mantissa_PN = mkPN "mantissa" ;  
lin assign_N = mkN "assign" ;  
lin queue_PN = mkPN "queue" ;  
lin enqueue_N = mkN "enqueue" ;  
lin dequeue_V = mkV "dequeue" ;  
lin FIFO_PN = mkPN "FIFO" ;  
lin stateful_A = mkA "stateful" ;  
lin app_N = mkN "app" ;  
lin diverge_N = mkN "diverge" ;  
lin reserved_V = mkV "reserved" ;  
lin brute_A = mkA "brute" ;  
lin LIFO_PN = mkPN "LIFO" ;  
lin sensor_N = mkN "sensor" ;  
lin metainformation_N = mkN "metainformation" ;  
lin RTFM_PN = mkPN "RTFM" ;  
lin scripting_N = mkN "scripting" ;  
lin computing_N = mkN "computing" ;  
lin toplevel_N = mkN "toplevel" ;  
lin eval_V = mkV "eval" ;  
lin repl_V = mkV "repl" ;  
lin NAF_PN = mkPN "NAF" ;  
lin CLI_PN = mkPN "CLI" ;  
lin refer_N = mkN "refer" ;  
lin dereferencing_V = mkV "dereferencing" ;  
lin Java_PN = mkPN "Java" ;  
lin JVM_PN = mkPN "JVM" ;  
lin bytecode_N = mkN "bytecode" ;  
lin CSV_PN = mkPN "CSV" ;  
lin popup_N = mkN "popup" ;  
lin CLP_PN = mkPN "CLP" ;  
lin PDF_PN = mkPN "PDF" ;  
lin anytime_N = mkN "anytime" ;  
lin throw_V = mkV "throw" ;  
lin diff_N = mkN "diff" ;  
lin coding_N = mkN "coding" ;  
lin computationally_Adv = mkAdv "computationally" ;  
lin greedy_N = mkN "greedy" ;  
lin JPEG_PN = mkPN "JPEG" ;  
lin PNG_PN = mkPN "PNG" ;  
lin GIF_PN = mkPN "GIF" ;  
lin webp_PN = mkPN "webp" ;  
lin randomize_V = mkV "randomize" ;  
lin runtime_N = mkN "runtime" ;  
lin DSL_PN = mkPN "DSL" ;  
lin GPL_PN = mkPN "GPL" ;  
lin debug_N = mkN "debug" ;  
lin grapheme_N = mkN "grapheme" ;  
lin operating_N = mkN "operating" ;  
lin OS_PN = mkPN "OS" ;  
lin stylesheet_N = mkN "stylesheet" ;  
lin API_PN = mkPN "API" ;  
lin lookup_N = mkN "lookup" ;  
lin addressing_N = mkN "addressing" ;  
lin RCS_PN = mkPN "RCS" ;  
lin initialize_N = mkN "initialize" ;  
lin integrated_A = mkA "integrated" ;  
lin macro_PN = mkPN "macro" ;  
lin bricoleur_A = mkA "bricoleur" ;  
lin subprogram_N = mkN "subprogram" ;  
lin subroutine_A = mkA "subroutine" ;  
lin invoker_N = mkN "invoker" ;  
lin widget_N = mkN "widget" ;  
lin merge_N = mkN "merge" ;  
lin Monte_PN = mkPN "Monte" ;  
lin Carlo_PN = mkPN "Carlo" ;  
lin KRR_PN = mkPN "KRR" ;  
lin hypotheses_N = mkN "hypotheses" "hypotheses" ;  
lin well_Adv = mkAdv "well" ;  
lin formulae_N = mkN "formulae" ;  
lin NNF_PN = mkPN "NNF" ;  
lin CNF_PN = mkPN "CNF" ;  
lin DNF_PN = mkPN "DNF" ;  
lin Hilbert_PN = mkPN "Hilbert" ;  
lin Ackermann_PN = mkPN "Ackermann" ;  
lin intuitionistic_A = mkA "intuitionistic" ;  
lin disjunct_N = mkN "disjunct" ;  
lin satisfiable_A = mkA "satisfiable" ;  
lin falsifiable_A = mkA "falsifiable" ;  
lin proving_N = mkN "proving" ;  
lin explanan_N = mkN "explanan" "explanans" ;  
lin explanandum_PN = mkPN "explanandum" ;  
lin refuting_N = mkN "refuting" ;  
lin Andrew_PN = mkPN "Andrew" ;  
lin Herbrand_PN = mkPN "Herbrand" ;  
lin Kripke_PN = mkPN "Kripke" ;  
lin switching_N = mkN "switching" ;  
lin atom_PN = mkPN "atom" ;  
lin propositional_A = mkA "propositional" ;  
lin functionally_Adv = mkAdv "functionally" ;  
lin satisfying_A = mkA "satisfying" ;  
lin quantified_A = mkA "quantified" ;  
lin verum_PN = mkPN "verum" ;  
lin falsum_N = mkN "falsum" ;  
lin strongly_Adv = mkAdv "strongly" ;  
lin weakly_Adv = mkAdv "weakly" ;  
lin Frege_PN = mkPN "Frege" ;  
lin Russell_PN = mkPN "Russell" ;  
lin contraposition_N = mkN "contraposition" ;  
lin contrapositive_A = mkA "contrapositive" ;  
lin nand_PN = mkPN "nand" ;  
lin conjunct_N = mkN "conjunct" ;  
lin formula_PN = mkPN "formula" ;  
lin ARS_PN = mkPN "ARS" ;  
lin entailment_N = mkN "entailment" ;  
lin unifier_A = mkA "unifier" ;  
lin unifiable_A = mkA "unifiable" ;  
lin Edinburgh_PN = mkPN "Edinburgh" ;  
lin run_V = mkV "run" ;  
lin decider_N = mkN "decider" ;  
lin nondeterministic_A = mkA "nondeterministic" ;  
lin NTM_N = mkN "NTM" ;  
lin DTM_PN = mkPN "DTM" ;  
lin encode_N = mkN "encode" ;  
lin NP_PN = mkPN "NP" ;  
lin hard_PN = mkPN "hard" ;  
lin np_N = mkN "np" ;  
lin decidable_A = mkA "decidable" ;  
lin undecidable_A = mkA "undecidable" ;  
lin partially_Adv = mkAdv "partially" ;  
lin semidecidable_A = mkA "semidecidable" ;  
lin recursively_Adv = mkAdv "recursively" ;  
lin enumerable_A = mkA "enumerable" ;  
lin 'semi-decision_N' = mkN "semi-decision" ;  
lin 'semi-_Adv' = mkAdv "semi-" ;  
lin Landau_PN = mkPN "Landau" ;  
lin RAM_PN = mkPN "RAM" ;  
lin subproblem_N = mkN "subproblem" ;  
lin PTM_PN = mkPN "PTM" ;  
lin paucal_A = mkA "paucal" ;  
lin grammeme_N = mkN "grammeme" ;  
lin adposition_N = mkN "adposition" ;  
lin divalent_A = mkA "divalent" ;  
lin cataphor_N = mkN "cataphor" ;  
lin postcedent_N = mkN "postcedent" ;  
lin bridging_N = mkN "bridging" ;  
lin Nucleus_PN = mkPN "Nucleus" ;  
lin predicand_N = mkN "predicand" ;  
lin modifier_V = mkV "modifier" ;  
lin exclamative_A = mkA "exclamative" ;  
lin morphism_N = mkN "morphism" ;  
lin definien_N = mkN "definien" "definiens" ;  
lin delimiter_N = mkN "delimiter" ;  
lin biform_N = mkN "biform" ;  
lin biview_N = mkN "biview" ;  
lin meta_N = mkN "meta" ;  
lin satisfy_N = mkN "satisfy" "satisfies" ;  
lin taxonomical_A = mkA "taxonomical" ;  
lin predict_N = mkN "predict" ;  
lin verify_N = mkN "verify" ;  
lin justified_A = mkA "justified" ;  
lin abductive_A = mkA "abductive" ;  
lin 'j$th_N' = mkN "j$th" ;  
lin modulo_N = mkN "modulo" ;  
lin modulus_PN = mkPN "modulus" ;  
lin congruence_N = mkN "congruence" ;  
lin hcf_PN = mkPN "hcf" ;  
lin gcf_PN = mkPN "gcf" ;  
lin 'non-negative_A' = mkA "non-negative" ;  
lin 'non-positive_A' = mkA "non-positive" ;  
lin lcm_PN = mkPN "lcm" ;  
lin least_A = mkA "least" ;  
lin discriminant_A = mkA "discriminant" ;  
lin radix_PN = mkPN "radix" ;  
lin arg_PN = mkPN "arg" ;  
lin maxima_N = mkN "maxima" ;  
lin argmax_N = mkN "argmax" ;  
lin argmin_PN = mkPN "argmin" ;  
lin miminma_N = mkN "miminma" ;  
lin minimize_N = mkN "minimize" ;  
lin de_PN = mkPN "de" ;  
lin Moivre_PN = mkPN "Moivre" ;  
lin summand_N = mkN "summand" ;  
lin Napier_PN = mkPN "Napier" ;  
lin extended_A = mkA "extended" ;  
lin odd_PN = mkPN "odd" ;  
lin Dedekind_PN = mkPN "Dedekind" ;  
lin Borel_PN = mkPN "Borel" ;  
lin borel_A = mkA "borel" ;  
lin countably_Adv = mkAdv "countably" ;  
lin Smarandache_PN = mkPN "Smarandache" ;  
lin fourth_A = mkA "fourth" ;  
lin smarandache_N = mkN "smarandache" ;  
lin Soldner_PN = mkPN "Soldner" ;  
lin fifth_A = mkA "fifth" ;  
lin sixteenth_A = mkA "sixteenth" ;  
lin Cahen_PN = mkPN "Cahen" ;  
lin minex_N = mkN "minex" ;  
lin Brun_PN = mkPN "Brun" ;  
lin googolplexian_A = mkA "googolplexian" ;  
lin skew_N = mkN "skew" "Skewes" ;  
lin Skewes_N = mkN "Skewes" "Skewes" ;  
lin Sierpinski_PN = mkPN "Sierpinski" ;  
lin Beraha_PN = mkPN "Beraha" ;  
lin tenth_A = mkA "tenth" ;  
lin Golomb_PN = mkPN "Golomb" ;  
lin Dickman_PN = mkPN "Dickman" ;  
lin Niven_PN = mkPN "Niven" ;  
lin eleventh_A = mkA "eleventh" ;  
lin Champernowne_PN = mkPN "Champernowne" ;  
lin fourteenth_A = mkA "fourteenth" ;  
lin Wilbraham_PN = mkPN "Wilbraham" ;  
lin Gibbs_PN = mkPN "Gibbs" ;  
lin googol_PN = mkPN "googol" ;  
lin Copeland_PN = mkPN "Copeland" ;  
lin Erdös_PN = mkPN "Erdös" ;  
lin thirteenth_A = mkA "thirteenth" ;  
lin googolplexplex_N = mkN "googolplexplex" ;  
lin googolplexplexplex_N = mkN "googolplexplexplex" ;  
lin Mills_PN = mkPN "Mills" ;  
lin Borwein_PN = mkPN "Borwein" ;  
lin Feynman_PN = mkPN "Feynman" ;  
lin googolminex_N = mkN "googolminex" ;  
lin fifteenth_A = mkA "fifteenth" ;  
lin Gelfond_PN = mkPN "Gelfond" ;  
lin twelfth_A = mkA "twelfth" ;  
lin seventh_A = mkA "seventh" ;  
lin Liouville_PN = mkPN "Liouville" ;  
lin Kempner_PN = mkPN "Kempner" ;  
lin Schneider_PN = mkPN "Schneider" ;  
lin sixth_A = mkA "sixth" ;  
lin Hardy_PN = mkPN "Hardy" ;  
lin Mascheroni_PN = mkPN "Mascheroni" ;  
lin eighth_A = mkA "eighth" ;  
lin parse_N = mkN "parse" ;  
lin parsing_N = mkN "parsing" ;  
lin langg_PN = mkPN "langg" ;  
lin regex_N = mkN "regex" ;  
lin subexpression_N = mkN "subexpression" ;  
lin Chomsky_PN = mkPN "Chomsky" ;  
lin nonterminal_A = mkA "nonterminal" ;  
lin vaRalph_PN = mkPN "vaRalph" ;  
lin tersym_N = mkN "tersym" ;  
lin insym_N = mkN "insym" ;  
lin starting_N = mkN "starting" ;  
lin CFL_N = mkN "CFL" ;  
lin CFG_PN = mkPN "CFG" ;  
lin indirectly_Adv = mkAdv "indirectly" ;  
lin BNF_PN = mkPN "BNF" ;  
lin Backus_PN = mkPN "Backus" ;  
lin Bachus_PN = mkPN "Bachus" ;  
lin Naur_PN = mkPN "Naur" ;  
lin greibach_N = mkN "greibach" ;  
lin replacing_V = mkV "replacing" ;  
lin grule_V = mkV "grule" ;  
lin pairwise_N = mkN "pairwise" ;  
lin mset_N = mkN "mset" ;  
lin multiset_N = mkN "multiset" ;  
lin codomain_N = mkN "codomain" ;  
lin undefin_V = mkV "undefin" ;  
lin antisymmetric_A = mkA "antisymmetric" ;  
lin ucertain_A = mkA "ucertain" ;  
lin setoid_N = mkN "setoid" ;  
lin meet_V = mkV "meet" ;  
lin surjection_N = mkN "surjection" ;  
lin iterate_A = mkA "iterate" ;  
lin ultrafilter_N = mkN "ultrafilter" ;  
lin poset_N = mkN "poset" ;  
lin quasiorder_N = mkN "quasiorder" ;  
lin preorder_N = mkN "preorder" ;  
lin proset_N = mkN "proset" ;  
lin surjective_A = mkA "surjective" ;  
lin onto_Adv = mkAdv "onto" ;  
lin quintuple_N = mkN "quintuple" ;  
lin sextuple_N = mkN "sextuple" ;  
lin septuple_N = mkN "septuple" ;  
lin Cartesian_A = mkA "Cartesian" ;  
lin tuple_N = mkN "tuple" ;  
lin inductively_Adv = mkAdv "inductively" ;  
lin '-empty_A' = mkA "-empty" ;  
lin elementhood_N = mkN "elementhood" ;  
lin injective_A = mkA "injective" ;  
lin singleton_PN = mkPN "singleton" ;  
lin superset_N = mkN "superset" ;  
lin irreflexive_A = mkA "irreflexive" ;  
lin upset_A = mkA "upset" ;  
lin closed_A = mkA "closed" ;  
lin downset_N = mkN "downset" ;  
lin 'semi-ideal_A' = mkA "semi-ideal" ;  
lin english_A = mkA "english" ;  
lin bijective_N = mkN "bijective" ;  
lin bijection_N = mkN "bijection" ;  
lin coinitial_A = mkA "coinitial" ;  
lin fixpoint_N = mkN "fixpoint" ;  
lin subword_N = mkN "subword" ;  
lin definitional_A = mkA "definitional" ;  
lin adicity_N = mkN "adicity" ;  
lin ternary_PN = mkPN "ternary" ;  
lin finitary_A = mkA "finitary" ;  
lin equipollent_A = mkA "equipollent" ;  
lin equinumerous_A = mkA "equinumerous" ;  
lin pointed_A = mkA "pointed" ;  
lin basepoint_N = mkN "basepoint" ;  
lin nonstationary_A = mkA "nonstationary" ;  
lin uncurrying_A = mkA "uncurrying" ;  
lin cofinality_N = mkN "cofinality" ;  
lin cofinal_A = mkA "cofinal" ;  
lin metavariable_A = mkA "metavariable" ;  
lin kleene_PN = mkPN "kleene" ;  
lin Kleene_PN = mkPN "Kleene" ;  
lin nonempty_A = mkA "nonempty" ;  
lin ary_N = mkN "ary" ;  
lin composable_A = mkA "composable" ;  
lin unordered_A = mkA "unordered" ;  
lin uncountable_A = mkA "uncountable" ;  
lin AI_PN = mkPN "AI" ;  
lin percept_V = mkV "percept" ;  
lin connectionism_N = mkN "connectionism" ;  
lin NI_PN = mkPN "NI" ;  
lin Dartmouth_PN = mkPN "Dartmouth" ;  
lin Conference_PN = mkPN "Conference" ;  
lin PMF_PN = mkPN "PMF" ;  
lin hide_A = mkA "hide" ;  
lin 'non-atomic_A' = mkA "non-atomic" ;  
lin Bayesian_A = mkA "Bayesian" ;  
lin ML_PN = mkPN "ML" ;  
lin MT_PN = mkPN "MT" ;  
lin NLG_PN = mkPN "NLG" ;  
lin URI_PN = mkPN "URI" ;  
lin XML_PN = mkPN "XML" ;  
lin namespace_N = mkN "namespace" ;  
lin OpenMath_PN = mkPN "OpenMath" ;  
lin CD_PN = mkPN "CD" ;  
lin browsing_N = mkN "browsing" ;  
lin hostname_N = mkN "hostname" ;  
lin localhost_N = mkN "localhost" ;  
lin UCS_PN = mkPN "UCS" ;  
lin unicode_N = mkN "unicode" ;  
lin BMP_PN = mkPN "BMP" ;  
lin URL_PN = mkPN "URL" ;  
lin URN_PN = mkPN "URN" ;  
lin http_N = mkN "http" ;  
lin get_V = mkV "get" ;  
lin PUT_PN = mkPN "PUT" ;  
lin extensible_A = mkA "extensible" ;  
lin XHTML_PN = mkPN "XHTML" ;  
lin DOM_PN = mkPN "DOM" ;  
lin World_PN = mkPN "World" ;  
lin Wide_A = mkA "Wide" ;  
lin Web_PN = mkPN "Web" ;  
lin Consortium_PN = mkPN "Consortium" ;  
lin W3C_PN = mkPN "W3C" ;  
lin WWW_PN = mkPN "WWW" ;  
lin cdata_N = mkN "cdata" ;  
lin PI_N = mkN "PI" ;  
lin mathematics_PN = mkPN "mathematics" ;  
lin Mathml_PN = mkPN "Mathml" ;  
lin mathml_PN = mkPN "mathml" ;  
lin HTML_PN = mkPN "HTML" ;  
lin inequation_N = mkN "inequation" ;  
lin fully_Adv = mkAdv "fully" ;  
lin math_N = mkN "math" ;  
lin iff_PN = mkPN "iff" ;  
lin definiendum_N = mkN "definiendum" ;  
lin piecewise_Adv = mkAdv "piecewise" ;  
lin approximately_Adv = mkAdv "approximately" ;  
lin multigraph_N = mkN "multigraph" ;  
lin subgraph_N = mkN "subgraph" ;  
lin supergraph_N = mkN "supergraph" ;  
lin partite_N = mkN "partite" ;  
lin bipartite_N = mkN "bipartite" ;  
lin indegree_N = mkN "indegree" ;  
lin outdegree_N = mkN "outdegree" ;  
lin polytree_N = mkN "polytree" ;  
lin label_V = mkV "label" ;  
lin labeling_N = mkN "labeling" ;  
lin anticlique_N = mkN "anticlique" ;  
lin coclique_N = mkN "coclique" ;  
lin ray_PN = mkPN "ray" ;  
lin isomorphic_A = mkA "isomorphic" ;  
lin incoming_V = mkV "incoming" ;  
lin outgoing_A = mkA "outgoing" ;  
lin Eulerian_A = mkA "Eulerian" ;  
lin subtree_N = mkN "subtree" ;  
lin supertree_N = mkN "supertree" ;  
lin Cayley_PN = mkPN "Cayley" ;  
lin chord_PN = mkPN "chord" ;  
lin chordless_A = mkA "chordless" ;  
lin cutvertex_N = mkN "cutvertex" ;  
lin balanced_V = mkV "balanced" ;  
lin colorable_A = mkA "colorable" ;  
lin reachable_A = mkA "reachable" ;  
lin undirected_A = mkA "undirected" ;  
lin vertice_N = mkN "vertice" "vertices" ;  
lin matching_N = mkN "matching" ;  
lin 'non-extensible_A' = mkA "non-extensible" ;  
lin girth_PN = mkPN "girth" ;  
lin SRG_PN = mkPN "SRG" ;  
lin bridgeless_A = mkA "bridgeless" ;  
lin DAG_PN = mkPN "DAG" ;  
lin Hamiltonian_PN = mkPN "Hamiltonian" ;  
lin automated_A = mkA "automated" ;  
lin ATP_PN = mkPN "ATP" ;  
lin prover_N = mkN "prover" "provers" ;  
}
